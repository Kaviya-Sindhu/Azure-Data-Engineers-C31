{
	"name": "Miniproject_Incrementalload",
	"properties": {
		"activities": [
			{
				"name": "GetLastLoadTime",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "SELECT LastLoadedTime FROM ControlTable \n",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Getlastloadtime",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "GetUpdatedTime",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "\n\nSELECT MAX(Date_Time) AS Date_Time FROM weather_data",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SqlServerTable3",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "UpdateControlTable",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Incremental load",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": {
						"value": "UpdateControlTable",
						"type": "Expression"
					},
					"storedProcedureParameters": {
						"TableName": {
							"value": {
								"value": "weather_data\n",
								"type": "Expression"
							},
							"type": "String"
						},
						"LastLoadedTime ": {
							"value": {
								"value": "substring(activity('GetUpdatedTime').output.firstRow.Date_Time,0,19)\n\n",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "Miniproj_incrementaldataload",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Incremental load",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "GetLastLoadTime",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "GetUpdatedTime",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "SELECT * from weather_data \nwhere Date_Time>= \n   '@{activity('GetUpdatedTime').output.firstRow.Date_Time}'\n   and Date_Time > \n'@{activity('GetLastLoadTime').output.firstRow.LastLoadedTime}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SqlServerTable3",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ADLSGen2",
						"type": "DatasetReference"
					}
				]
			}
		],
		"variables": {
			"Lasttimestamp": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2025-08-04T22:39:55Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}