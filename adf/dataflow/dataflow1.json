{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText2",
						"type": "DatasetReference"
					},
					"name": "Employees"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText4",
						"type": "DatasetReference"
					},
					"name": "Department"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "CopyADLS",
						"type": "DatasetReference"
					},
					"name": "sink",
					"rejectedDataLinkedService": {
						"referenceName": "ADLSGen2",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "JOIN"
				},
				{
					"name": "select"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EmployeeID as integer,",
				"          Name as string,",
				"          DepartmentID as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Employees",
				"source(output(",
				"          DepartmentID as integer,",
				"          DepartmentName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Department",
				"Employees, Department join(Employees@DepartmentID == Department@DepartmentID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JOIN",
				"JOIN select(mapColumn(",
				"          EmployeeID,",
				"          Name,",
				"          DepartmentID = Employees@DepartmentID,",
				"          DepartmentName",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select",
				"select sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ID as string,",
				"          ServiceName as string,",
				"          Category as string,",
				"          PrimaryUse as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink"
			]
		}
	}
}